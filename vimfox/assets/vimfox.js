// Generated by CoffeeScript 1.6.3
/* vimfox.js ~ initiates websocket / reload script*/

var initWebSocket;

window.onload = function() {
  var s, script, vimfoxHost, _i, _len, _ref;
  _ref = document.getElementsByTagName('script');
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    script = _ref[_i];
    if (script.src.match('vimfox.js')) {
      vimfoxHost = script.src.replace('/vimfox/vimfox.js', '');
    }
  }
  if (typeof io === "undefined" || io === null) {
    s = document.createElement('script');
    s.type = 'text/javascript';
    s.async = true;
    s.onload = function() {
      return initWebSocket(vimfoxHost);
    };
    s.src = vimfoxHost + "/vimfox/socket.io.js";
    return document.body.appendChild(s);
  }
};

initWebSocket = function(host) {
  var socket;
  socket = io.connect(host + "/ws");
  socket.on('reload_file', function(data) {
    var css, new_href, _i, _len, _ref, _results;
    _ref = document.getElementsByTagName('link');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      css = _ref[_i];
      if (css.href.match(data.target_file)) {
        new_href = css.href.replace(/\?[0-9]+$/, '') + ("?" + (+(new Date)));
        _results.push(css.href = new_href);
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  });
  return socket.on('reload_page', function(data) {
    return location.reload(data.no_force_get ? false : true);
  });
};
